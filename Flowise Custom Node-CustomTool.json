{
  "name": "Flowise Custom Node",
  "description": "Flowise Custom Node to pre-process prompts via /v1/analyze",
  "color": "linear-gradient(rgb(62,228,80), rgb(169,208,97))",
  "iconSrc": "https://www.vectorlogo.zone/logos/nodejs/nodejs-icon.svg",
  "schema": "[{\"id\":0,\"property\":\"API_Key\",\"description\":\"\",\"type\":\"string\",\"required\":false},{\"id\":1,\"property\":\"Prompt\",\"description\":\"\",\"type\":\"string\",\"required\":false},{\"id\":2,\"property\":\"Action_on_High_Risk\",\"description\":\"\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"Compliance_Frameworks\",\"description\":\"\",\"type\":\"string\",\"required\":false}]",
  "func": "\n\nconst fetch = require('node-fetch');\nconst url = 'https://promptshield-g1cz.onrender.com/v1/analyze';\nconst prompt_text = $Prompt?.trim();\nconst action_on_high_risk_input = $Action_on_High_Risk?.trim();\nconst compliance_frameworks_input = $Compliance_Frameworks?.trim();\nconst api_key_input = $API_Key?.trim();\n\nlet frameworks;\n\ntry {\n  let cleaned = compliance_frameworks_input.replace(/\\\\/g, '');\n  frameworks = JSON.parse(cleaned);\n} catch (err) {\n  frameworks = compliance_frameworks_input\n    .replace(/\\\\/g, '')     \n    .split(',')\n    .map((s) => s.trim())\n    .filter(Boolean);\n}\n\n\nconst auth= 'Bearer '+api_key_input\nconst body = {\n    text: prompt_text,\n    compliance_frameworks: frameworks,\n    action_on_high_risk: action_on_high_risk_input\n};\n\nconst options = {\n    method: 'POST',\n    headers: {\n        'Authorization': auth,\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(body),\n};\n\ntry {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        if (errorData && errorData.detail) {\n            throw new Error(errorData.detail);\n        } else {\n            throw new Error(`HTTP Error ${response.status}`);\n        }\n    }\n\n    const data = await response.json();\n    return {\n        redacted_prompt: data.clean_text ?? '',\n        risk_score: data.risk_score !== undefined ? String(data.risk_score) : '0',\n        violations: JSON.stringify(data.violations ?? []),\n    };\n\n} catch (error) {\n    console.error(error);\n    return '';\n}",
  "workspaceId": "3f61f533-a715-4c7b-8030-5793e211ac1f"
}